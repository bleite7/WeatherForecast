name: .NET Build, test & deploy to Railway.app
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  CI:
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: src/WeatherForecast

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore

      - name: Test
        run: dotnet test --no-build --verbosity normal

      - name: Install SonarCloud scanner
        run: dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner

      - name: Analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./.sonar/scanner/dotnet-sonarscanner begin /k:"WeatherForecast" /o:"bleite7" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build
          dotnet test --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=json,cobertura,lcov,teamcity,opencover
          ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

  Test:
    runs-on: ubuntu-20.04
    environment: Test
    needs: [CI]
    defaults:
      run:
        working-directory: src/WeatherForecast/WeatherForecast.Api

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node 16
        uses: actions/setup-node@v3.5.1
        with:
          node-version: 16.x

      - name: Install Railway
        run: npm i -g @railway/cli

      - name: Deploy
        run: railway up
        working-directory: src/WeatherForecast/WeatherForecast.Api
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

  Production:
    runs-on: ubuntu-20.04
    environment: Production
    needs: [Test]
    defaults:
      run:
        working-directory: src/WeatherForecast/WeatherForecast.Api

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node 16
        uses: actions/setup-node@v3.5.1
        with:
          node-version: 16.x

      - name: Install Railway
        run: npm i -g @railway/cli

      - name: Deploy
        run: railway up
        working-directory: src/WeatherForecast/WeatherForecast.Api
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
